#+PROPERTY: header-args :tangle init.el

* Greeting
#+begin_src emacs-lisp
  (message "hello world")
#+end_src

* Package Manager
#+begin_src emacs-lisp
  (setq straight-use-package-by-default t)
  (defvar bootstrap-version)
  (let ((bootstrap-file
	 (expand-file-name "straight/repos/straight.el/bootstrap.el" user-emacs-directory))
	(bootstrap-version 6))
    (unless (file-exists-p bootstrap-file)
      (with-current-buffer
	  (url-retrieve-synchronously
	   "https://raw.githubusercontent.com/radian-software/straight.el/develop/install.el"
	   'silent 'inhibit-cookies)
	(goto-char (point-max))
	(eval-print-last-sexp)))
    (load bootstrap-file nil 'nomessage))
#+end_src

* UI Tweak
disable menu bar, scroll bar and tool bar.
#+begin_src emacs-lisp
  (menu-bar-mode -1)
  (scroll-bar-mode -1)
  (tool-bar-mode -1)
#+end_src

disable the \*Gnu Emacs\* buffer.
#+begin_src emacs-lisp
  (setq inhibit-startup-message t)
#+end_src
** Theme
#+begin_src emacs-lisp
  (use-package standard-themes)

  (use-package kaolin-themes
    :config
    (load-theme 'kaolin-dark t)
    (kaolin-treemacs-theme))
#+end_src
** Auto swith Dark and Light theme
#+begin_src emacs-lisp
  (defun load-dark-theme ()
    (load-theme 'kaolin-dark t))

  (defun load-light-theme ()
    (load-theme 'kaolin-light t))

  (use-package auto-dark
    :straight (auto-dark :type git :host github :repo "shanexu/auto-dark-emacs")
    :config
    (setq auto-dark-dark-mode-hook 'load-dark-theme)
    (setq auto-dark-light-mode-hook 'load-light-theme)
    (auto-dark-mode t))
#+end_src

** Chinese
#+begin_src emacs-lisp
  (use-package cnfonts
    :config
    (cnfonts-mode 1))
#+end_src

* org
#+begin_src emacs-lisp
  (use-package org
    :hook
    (org-mode . org-indent-mode))
#+end_src

** superstar
#+begin_src emacs-lisp
  (use-package org-superstar
    :hook
    (org-mode . org-superstar-mode))
#+end_src

* Completion
#+begin_src emacs-lisp
  (use-package vertico
    :init
    (vertico-mode)

    ;; Different scroll margin
    ;; (setq vertico-scroll-margin 0)

    ;; Show more candidates
    ;; (setq vertico-count 20)

    ;; Grow and shrink the Vertico minibuffer
    ;; (setq vertico-resize t)

    ;; Optionally enable cycling for `vertico-next' and `vertico-previous'.
    ;; (setq vertico-cycle t)
    )

  ;; Persist history over Emacs restarts. Vertico sorts by history position.
  (use-package savehist
    :init
    (savehist-mode))

  ;; A few more useful configurations...
  (use-package emacs
    :init
    ;; Add prompt indicator to `completing-read-multiple'.
    ;; We display [CRM<separator>], e.g., [CRM,] if the separator is a comma.
    (defun crm-indicator (args)
      (cons (format "[CRM%s] %s"
                    (replace-regexp-in-string
                     "\\`\\[.*?]\\*\\|\\[.*?]\\*\\'" ""
                     crm-separator)
                    (car args))
            (cdr args)))
    (advice-add #'completing-read-multiple :filter-args #'crm-indicator)

    ;; Do not allow the cursor in the minibuffer prompt
    (setq minibuffer-prompt-properties
          '(read-only t cursor-intangible t face minibuffer-prompt))
    (add-hook 'minibuffer-setup-hook #'cursor-intangible-mode)

    ;; Emacs 28: Hide commands in M-x which do not work in the current mode.
    ;; Vertico commands are hidden in normal buffers.
    ;; (setq read-extended-command-predicate
    ;;       #'command-completion-default-include-p)

    ;; Enable recursive minibuffers
    (setq enable-recursive-minibuffers t))

  ;; Optionally use the `orderless' completion style.
  (use-package orderless
    :init
    ;; Configure a custom style dispatcher (see the Consult wiki)
    ;; (setq orderless-style-dispatchers '(+orderless-consult-dispatch orderless-affix-dispatch)
    ;;       orderless-component-separator #'orderless-escapable-split-on-space)
    (setq completion-styles '(orderless basic)
          completion-category-defaults nil
          completion-category-overrides '((file (styles partial-completion)))))
#+end_src

* Term
** vterm
#+begin_src emacs-lisp
  (use-package vterm
    :ensure t)
#+end_src

